version: '3.5'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:

  webapp:
    build: ./webapp
    container_name: webapp
    environment:
      - MONGODB_ADDRESS=${MONGODB_ADDRESS}
    command: ["uvicorn", "webapp:app", "--host", "0.0.0.0"]
    ports:
      - 8000:8000
    networks:
      - backend
    depends_on:
      - mongo

  mongo:
    build: ./mongo
    container_name: mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_PATH_HOST}/mongo:/data/db
      - ${DATA_PATH_HOST}/mongo_config:/data/configdb
    networks:
      - backend

  influxdb:
    image: influxdb:1.7
    container_name: influxdb
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
      - "2003:2003"
#    env_file:
#      - 'env.influxdb'
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - ./data/influxdb:/var/lib/influxdb
    networks:
      - backend

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/etc/telegraf/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
#    env_file:
#      - 'env.grafana'
    user: "0"
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ./data/grafana:/var/lib/grafana
    links:
      - influxdb
    depends_on:
      - influxdb
    networks:
      - backend

#  mongo-webui:
#    build: ./mongo-webui
#    container_name: mongo-webui
#    environment:
#      - ROOT_URL=${MONGO_WEBUI_ROOT_URL}
#      - MONGO_URL=${MONGO_WEBUI_MONGO_URL}
#      - INSTALL_MONGO=${MONGO_WEBUI_INSTALL_MONGO}
#    volumes:
#      - ${DATA_PATH_HOST}/mongo-webui:/data/db
#    ports:
#      - "${MONGO_WEBUI_PORT}:3000"
#    networks:
#      - backend
#    depends_on:
#      - mongo

volumes:
  mongo:
    driver: ${VOLUMES_DRIVER}
